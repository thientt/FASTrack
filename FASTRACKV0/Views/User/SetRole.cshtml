@model FASTrack.ViewModel.UserViewModel

@{
    ViewBag.Title = "SetUType";
    SelectListItem[] uType = ViewBag.uType;
}

<style>
    .message-box {
        text-align: center;
        padding: 5px;
        color: #545454;
        width: 80%;
        margin: 5px auto;
    }

    .clean {
        background-color: #efefef;
        border-top: 2px solid #dedede;
        border-bottom: 2px solid #dedede;
    }

    .info {
        background-color: #f7fafd;
        border-top: 2px solid #b5d3ff;
        border-bottom: 2px solid #b5d3ff;
    }

    .ok {
        background-color: #d7f7c4;
        border-top: 2px solid #82cb2f;
        border-bottom: 2px solid #82cb2f;
    }

    .alert {
        background-color: #fef5be;
        border-top: 2px solid #fdd425;
        border-bottom: 2px solid #fdd425;
        color: #e10c0c;
    }

    .error {
        background-color: #ffcdd1;
        border-top: 2px solid #e10c0c;
        border-bottom: 2px solid #e10c0c;
    }
</style>

<h2>Set User Role</h2>
<hr />

<p>
    @using (Html.BeginForm())
    {
        <div>
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="control-label col-lg-2">Email</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.Email, htmlAttributes: new { @class = "form-control", @readonly = "true" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">Full Name</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.FullName, htmlAttributes: new { @class = "form-control", @readonly = "true" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">Phone</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(x => x.Phone, htmlAttributes: new { @class = "form-control", @readonly = "true" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Salt)
                <div class="form-group">
                    <label class="control-label col-lg-2">Registered Date</label>
                    <div class="col-lg-10">
                        @Html.DisplayFor(model => model.RegistedDate)
                        @Html.HiddenFor(model => model.RegistedDate)
                    </div>
                </div>
                <div>
                    @Html.HiddenFor(model => model.IsLocked)
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-2">User Role</label>
                    <div class="col-lg-10">
                        @Html.DropDownListFor(x => x.RoleId, new SelectList(Model.Roles, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-offset-2 col-lg-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <div class="col-lg-offset-2 col-lg-10">
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    }
</p>
@Html.Partial("_PartialPageLoading")