@model FASTrack.ViewModel.ProductViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Product - @Html.DisplayFor(model => model.Name)</h2>
<hr />

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class="control-label col-md-2">Name<span class="required">*</span></label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Lab Site<span class="required">*</span></label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LabSiteId, new SelectList(Model.LabSites, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LabSiteId)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">MainPerson</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.MainPerson, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MainPerson)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">SecondaryPerson</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SecondaryPerson, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SecondaryPerson)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">TertiaryPerson</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TertiaryPerson, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TertiaryPerson)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Description</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-danger btn-width-md" />
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
